# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

    

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - AKS DevOps/02 Terraform with Azure/04-demo-resource-group-with-variables-using-terraform-and-devops/IAC/terraform/*

pool: Default

stages:
- stage: My_Init_Stage
  jobs:
  - job: My_Init_Job
    steps:
    - script: |
        tree $(Agent.BuildDirectory)
        echo "----------------------"
        # ls -la $(Build.SourcesDirectory)
        cd $(Build.SourcesDirectory)
        dir
      displayName: Dir

    - task: TerraformTaskV4@4
      env:
        TF_IN_AUTOMATION: true
        TF_WORKING_DIR: AKS DevOps/02 Terraform with Azure/04-demo-resource-group-with-variables-using-terraform-and-devops/IAC/terraform/
      inputs:
        provider: 'azurerm'
        command: 'custom'
        customCommand: 'workspace'
        commandOptions: 'list'
        outputTo: 'console'
        environmentServiceNameAzureRM: 'Free-Trial(e3b7fac9-cc7a-4e30-898f-087b8f741932)'

    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'Free-Trial(e3b7fac9-cc7a-4e30-898f-087b8f741932)'
        backendAzureRmResourceGroupName: 'PermanentRG'
        backendAzureRmStorageAccountName: 'mypermanentstorage'
        backendAzureRmContainerName: '04-demo-tfstatefiles'
        backendAzureRmKey: 'terraform.tfstate'


